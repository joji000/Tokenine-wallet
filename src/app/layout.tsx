import { ThemeProvider } from '@mui/material'
import { AppRouterCacheProvider } from '@mui/material-nextjs/v15-appRouter'
import { dehydrate, HydrationBoundary } from '@tanstack/react-query'
import type { Metadata } from 'next'
import { Noto_Sans_Thai } from 'next/font/google'
import { getQueryClient } from '@/libs/react-query.lib'
import theme from '@/Theme'

import ReactQueryProvider from './providers/ReactQueryProvider'
import CustomSessionProvider from './providers/SessionProvider'
import './globals.css'

const notoSansThai = Noto_Sans_Thai({
  subsets: ['thai', 'latin'],
  weight: ['300', '400', '500', '600', '700'],
  display: 'swap',
  variable: '--font-noto-sans-thai',
})

export const metadata: Metadata = {
  title: 'Wallet PointLedger',
  description: 'Generated by create next app',
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  const queryClient = getQueryClient()

  const dehydratedState = dehydrate(queryClient)
  // The dehydrated state is a serialized version of the query client state.
  // It is used to rehydrate the query client on the client side.

  return (
    <html lang="en">
      <body className={notoSansThai.className}>
        <CustomSessionProvider>
        <AppRouterCacheProvider>
          <ReactQueryProvider>
              <HydrationBoundary state={dehydratedState}>
                <ThemeProvider theme={theme}>
                  {children}
                </ThemeProvider>
              </HydrationBoundary>
          </ReactQueryProvider>
        </AppRouterCacheProvider>
        </CustomSessionProvider>
      </body>
    </html>
  )
}